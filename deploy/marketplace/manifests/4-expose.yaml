---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: marketplace-external-http
  namespace: marketplace
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  gatewayClassName: gke-l7-global-external-managed
  listeners:
  - name: http
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            shared-gateway-access: "true"
  - name: https
    port: 443
    protocol: HTTPS
    allowedRoutes:
      namespaces:
        from: Selector
        selector:
          matchLabels:
            shared-gateway-access: "true"
    hostname: '*.marketplace.gcp.v7labs.com'
    tls:
      mode: Terminate
      certificateRefs:
        - name: marketplace-tls
          kind: Secret
  addresses:
    - type: NamedAddress
      value: v7labs-mp
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: http-filter-redirect
  namespace: marketplace
spec:
  parentRefs:
    - name: marketplace-external-http
      sectionName: http
  hostnames:
    - "argo.marketplace.gcp.v7labs.com"
    - "login.marketplace.gcp.v7labs.com"
    - "signup.marketplace.gcp.v7labs.com"
  rules:
    - filters:
      - type: RequestRedirect
        requestRedirect:
          scheme: https
          statusCode: 301
# HTTPRoute, HealthCheckPolicy, and GCPBackendPolicy resources must exist in the same namespace
# as the target Service or ServiceImport resource
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: frontend-marketplace
  namespace: marketplace
spec:
  parentRefs:
    - name: marketplace-external-http
      namespace: marketplace
      sectionName: https
  hostnames:
    - "login.marketplace.gcp.v7labs.com"
  rules:
    - backendRefs:
      - name: frontend-marketplace
        port: 8080
---
apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  name: frontend-marketplace
  namespace: marketplace
spec:
  default:
    # From Terraform output
    securityPolicy: v7labs-mp-policy
    timeoutSec: 120
  targetRef:
    group: ""
    kind: Service
    name: frontend-marketplace
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: jwt-marketplace
  namespace: marketplace
spec:
  parentRefs:
    - name: marketplace-external-http
      namespace: marketplace
      sectionName: https
  hostnames:
    - "signup.marketplace.gcp.v7labs.com"
  rules:
    - backendRefs:
      - name: jwt-marketplace
        port: 8080
---
apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  name: jwt-marketplace
  namespace: marketplace
spec:
  default:
    # From Terraform output
    securityPolicy: v7labs-mp-policy
    timeoutSec: 120
  targetRef:
    group: ""
    kind: Service
    name: jwt-marketplace
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: argocd
  namespace: argo
spec:
  parentRefs:
    - name: marketplace-external-http
      namespace: marketplace
      sectionName: https
  hostnames:
    - "argo.marketplace.gcp.v7labs.com"
  rules:
    - backendRefs:
      - name: argocd-server
        port: 80
---
apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  name: argocd-iap
  namespace: argo
spec:
  default:
    iap:
      enabled: true
      # ARGO_IAP_CLIENT_ID
      clientID: "905388042002-1bcl03ovjpg5blri1mdacshlpo550fo6.apps.googleusercontent.com"
      oauth2ClientSecret:
        name: argocd-iap
  targetRef:
    group: ""
    kind: Service
    name: argocd-server
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-iap
  namespace: argo
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcpsm-mp
  target:
    name: argocd-iap
  data:
  - secretKey: key
    remoteRef:
      key: ARGO_IAP_CLIENT_SECRET
